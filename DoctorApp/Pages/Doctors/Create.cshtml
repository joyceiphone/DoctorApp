@page
@model DoctorApp.Pages.Doctors.CreateModel
@{
	ViewData["title"] = "Create";
}

<h3>@ViewData["title"]</h3>
<hr />

<div class="row">
	<form method="post">
		<div class="row">
			<div class="form-group col-4">
				<label class="control-label">First Name</label>
				<input asp-for="Doctors.DrFName" class="form-control" />
				<span asp-validation-for="Doctors.DrFName" class="text-danger"></span>
			</div>
			<div class="form-group col-4">
				<label class="control-label">Last Name</label>
				<input asp-for="Doctors.DrLName" class="form-control" />
				<span asp-validation-for="Doctors.DrLName" class="text-danger"></span>
			</div>
			<div class="form-group col-3">
				<label class="control-label">Middle Name</label>
				<input asp-for="Doctors.DrMName" class="form-control" />
			</div>
		</div>
		<div class="row">
			<div class="form-group col-4">
				<label class="control-label">Personal Cell</label>
				<input asp-for="Doctors.PersonalCell" class=" form-control" />
				<span asp-validation-for="Doctors.PersonalCell" class="text-danger"></span>
			</div>
			<div class="col-4"></div>
			<div class="form-group col-3">
				<label class="control-label">Speciality ID</label>
				<select asp-for="Doctors.SpecialityID" class="form-control form-select form-select-md" name="Doctors.SpecialityID">
					@foreach (var option in Model.Options)
					{
						<option value="@option.Value">@Html.DisplayFor(item => option.Text)</option>
					}
				</select>
				<span asp-validation-for="Doctors.SpecialityID" class="text-danger"></span>
			</div>
		</div>
		<div class="row">
			<div class="form-group col-4">
				<label class="control-label">Personal Email</label>
				<input asp-for="Doctors.EmailPersonal" class="form-control" />
				<span asp-validation-for="Doctors.EmailPersonal" class="text-danger"></span>
			</div>
			<div class="form-group col-7">
				<label class="control-label">Work Email</label>
				<input asp-for="Doctors.EmailWork" class=" form-control" />
				<span asp-validation-for="Doctors.EmailWork" class="text-danger"></span>
			</div>
		</div>
		<div class="form-group col-8">
			<label asp-for="Companies" class="control-label"></label>
			<select placeholder="select members" id="mySelect" multiple="multiple" class="form-control" name="CheckedCompanies">
				@foreach (var item in Model.Companies)
				{
					<option value="@item.Value">@item.Text</option>
				}
			</select>
		</div>
		<div id="address-row">
			<div class="address-item-toggle">
				<partial name="_AddressPartial" model="Model.Addresses[0]" />
			</div>
			@if (Model.Addresses.Count() > 1)
			{
				@for (int i = 1; i < Model.Addresses.Count(); i++)
				{
					<div class="address-item-toggle">
						<partial name="_AddressPartial" model="Model.Addresses[i]" />
					</div>
				}
			}
		</div>
		<div class="d-flex col-2 justify-content-md-start align-items-center mt-4">
			<h5>Address</h5>
			<span>
				<button id="addRow" type="button" class="btn btn-default btn-sm align-content-center pl-4">
					<svg bootstrap-icon="PlusSquare" width="24" height="24" aria-label="PlusSquare"></svg>
				</button>
			</span>
		</div>
		<div class="form-group mt-2">
			<input type="submit" name="command" value="Create" class="btn btn-primary" />
			<a class="btn btn-success" asp-page="Index">Doctor List</a>
		</div>
	</form>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		$(document).ready(function () {
			initializeValidation();
			$('#mySelect').multiselect({
				maxHeight: 300,
				buttonWidth: '100%',
				placeholder: 'Select options'
			});
			function checkAddressItemCount(increase = true) {
				var addressItemCount = $('.address-item').length;
				if (addressItemCount >= 4 && increase) {
					$('#addRow').prop('disabled', true);
				} else if (increase) {
					$('#addRow').prop('disabled', false);
				}
				if (addressItemCount < 5 && !increase) {
					$('#addRow').prop('disabled', false);
				} else if (!increase) {
					$('#addRow').prop('disabled', true);
				}
			}
			$('#addRow').click(function () {
				checkAddressItemCount();
				initializeValidation();
			});

			$('#addRow').click(function (event) {
				event.preventDefault();
				$.ajax({
					url: '/Doctors/Create?handler=AddRow',
					method: "GET",
					contentType: "application/json; charset=utf-8",
					headers: {
						RequestVerificationToken:
							$('input:hidden[name="__RequestVerificationToken"]').val()
					},
					success: function (partialView) {
						$('#address-row').append(partialView);
						initializeValidation();
					},
					error: function (xhr, status, error) {
						console.error('Error loading address row:', error);
					}
				});
			});

			function hasNoIndexInName(element) {
				var name = element.attr('name');
				return !name.includes('[');
			}

			function hasNoIndexIndataValmsgFor(element) {
				var name = element.attr('data-valmsg-for');
				return !name.includes('[');
			}

			function initializeValidation() {
				var index = 0;
				$('#address-row').find('.address-item').each(function () {
					$(this).find('input, select').each(function () {
						if (hasNoIndexInName($(this))) {
							var name = $(this).attr('name');
							$(this).attr('name', 'Addresses[' + index + '].' + name);
							$(this).attr('id', 'Addresses_' + index + '__' + name);
						}
					});
					$(this).find('.field-validation-valid').each(function () {
						if (hasNoIndexIndataValmsgFor($(this))) {
							var name = $(this).attr('data-valmsg-for');
							$(this).attr('data-valmsg-for', 'Addresses[' + index + '].' + name);
						}
					});
					index++;
					$.validator.unobtrusive.parse('#address-row');
					$("form").removeData("validator");
					$("form").removeData("unobtrusiveValidation");
					$.validator.unobtrusive.parse("form");
				});
			}
			function reindexAddressRows() {
				var index = 0;
				$('#address-row').find('.address-item-toggle .address-item').each(function () {
					$(this).find('input, select').each(function () {
						var name = $(this).attr('name');
						if (name) {
							var newName = name.replace(/Addresses\[\d+\]/, 'Addresses[' + index + ']');
							$(this).attr('name', newName);
							$(this).attr('id', newName.replace(/\./g, '_'));
						}
					});
					$(this).find('.field-validation-valid').each(function () {
						var name = $(this).attr('data-valmsg-for');
						if (name) {
							var newName = name.replace(/Addresses\[\d+\]/, 'Addresses[' + index + ']');
							$(this).attr('data-valmsg-for', newName);
						}
					});
					index++;
				});

				$.validator.unobtrusive.parse('#address-row');
				$("form").removeData("validator");
				$("form").removeData("unobtrusiveValidation");
				$.validator.unobtrusive.parse("form");
			}

			$(document).on('click', '.remove-row', function () {
				$(this).closest('.address-item-toggle').removeClass('address-item-toggle').remove();
				checkAddressItemCount(false);
				reindexAddressRows();
			})
			$(document).on('click', '.visible-button', function () {
				$(this).closest('.d-flex').next('.address-item').toggle();
				$(this).find('.triangle').toggleClass('rotate-180');
			});
			$('.remove-row:first').hide();

			function checkSpecialtyRowCount() {
				var specialtyCount = $('#Doctors_SpecialityID option').length;
				return specialtyCount > 0;
			}

			$('form').submit(function (event) {
				if (!checkSpecialtyRowCount()) {
					alert('Please add specialty on the Specialty Page.')
					event.preventDefault();
				}
			})
		})
	</script>
}

